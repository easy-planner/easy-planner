// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestEasyPlanner
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// SelectLoginForm
        /// </summary>
        public void SelectLoginForm()
        {
            #region Variable Declarations
            WinTitleBar uIConnexionTitleBar = this.UIConnexionWindow.UIConnexionTitleBar;
            #endregion

            // Click 'Connexion' title bar
            Mouse.Click(uIConnexionTitleBar, new Point(45, 16));
        }
        
        /// <summary>
        /// EnterValidLogin - Use 'EnterValidLoginParams' to pass parameters into this method.
        /// </summary>
        public void EnterValidLogin()
        {
            #region Variable Declarations
            WpfEdit uITxtUserNameEdit = this.UIConnexionWindow1.UITxtUserNameEdit;
            #endregion

            // Type 'Fumme' in 'txtUserName' text box
            uITxtUserNameEdit.Text = this.EnterValidLoginParams.UITxtUserNameEditText;
        }
        
        /// <summary>
        /// EnterValidPassword - Use 'EnterValidPasswordParams' to pass parameters into this method.
        /// </summary>
        public void EnterValidPassword()
        {
            #region Variable Declarations
            WpfEdit uIPwPasswordEdit = this.UIConnexionWindow1.UIPwPasswordEdit;
            #endregion

            // Click 'pwPassword' text box
            Mouse.Click(uIPwPasswordEdit, new Point(22, 11));

            // Type '********' in 'pwPassword' text box
            Keyboard.SendKeys(uIPwPasswordEdit, this.EnterValidPasswordParams.UIPwPasswordEditSendKeys, true);
        }
        
        /// <summary>
        /// ClickOnConnectButton
        /// </summary>
        public void ClickOnConnectButton()
        {
            #region Variable Declarations
            WpfButton uIConnecterButton = this.UIConnexionWindow1.UIConnecterButton;
            #endregion

            // Click 'Connecter' button
            Mouse.Click(uIConnecterButton, new Point(56, 14));
        }
        
        /// <summary>
        /// SelectResult
        /// </summary>
        public void SelectResult()
        {
            #region Variable Declarations
            WpfEdit uITbxLoginResultEdit = this.UIConnexionWindow1.UITbxLoginResultEdit;
            WinEdit uINomEdit = this.UIWpfSchedulerSourceWindow.UIItemWindow.UIEventUserControlxamlListItem.UINomEdit;
            #endregion

            // Move 'tbxLoginResult' text box to 'Nom' text box
            uINomEdit.EnsureClickable(new Point(84, 17));
            Mouse.StartDragging(uITbxLoginResultEdit, new Point(109, 7));
            Mouse.StopDragging(uINomEdit, new Point(84, 17));
        }
        
        /// <summary>
        /// AssertCheckLoginForm - Use 'AssertCheckLoginFormExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertCheckLoginForm()
        {
            #region Variable Declarations
            WpfEdit uITbxLoginResultEdit = this.UIConnexionWindow1.UITbxLoginResultEdit;
            #endregion

            // Verify that the 'Text' property of 'tbxLoginResult' text box equals 'Login OK'
            Assert.AreEqual(this.AssertCheckLoginFormExpectedValues.UITbxLoginResultEditText, uITbxLoginResultEdit.Text, "Login form generate an error");
        }
        
        #region Properties
        public virtual EnterValidLoginParams EnterValidLoginParams
        {
            get
            {
                if ((this.mEnterValidLoginParams == null))
                {
                    this.mEnterValidLoginParams = new EnterValidLoginParams();
                }
                return this.mEnterValidLoginParams;
            }
        }
        
        public virtual EnterValidPasswordParams EnterValidPasswordParams
        {
            get
            {
                if ((this.mEnterValidPasswordParams == null))
                {
                    this.mEnterValidPasswordParams = new EnterValidPasswordParams();
                }
                return this.mEnterValidPasswordParams;
            }
        }
        
        public virtual AssertCheckLoginFormExpectedValues AssertCheckLoginFormExpectedValues
        {
            get
            {
                if ((this.mAssertCheckLoginFormExpectedValues == null))
                {
                    this.mAssertCheckLoginFormExpectedValues = new AssertCheckLoginFormExpectedValues();
                }
                return this.mAssertCheckLoginFormExpectedValues;
            }
        }
        
        public UIConnexionWindow UIConnexionWindow
        {
            get
            {
                if ((this.mUIConnexionWindow == null))
                {
                    this.mUIConnexionWindow = new UIConnexionWindow();
                }
                return this.mUIConnexionWindow;
            }
        }
        
        public UIConnexionWindow1 UIConnexionWindow1
        {
            get
            {
                if ((this.mUIConnexionWindow1 == null))
                {
                    this.mUIConnexionWindow1 = new UIConnexionWindow1();
                }
                return this.mUIConnexionWindow1;
            }
        }
        
        public UIWpfSchedulerSourceWindow UIWpfSchedulerSourceWindow
        {
            get
            {
                if ((this.mUIWpfSchedulerSourceWindow == null))
                {
                    this.mUIWpfSchedulerSourceWindow = new UIWpfSchedulerSourceWindow();
                }
                return this.mUIWpfSchedulerSourceWindow;
            }
        }
        #endregion
        
        #region Fields
        private EnterValidLoginParams mEnterValidLoginParams;
        
        private EnterValidPasswordParams mEnterValidPasswordParams;
        
        private AssertCheckLoginFormExpectedValues mAssertCheckLoginFormExpectedValues;
        
        private UIConnexionWindow mUIConnexionWindow;
        
        private UIConnexionWindow1 mUIConnexionWindow1;
        
        private UIWpfSchedulerSourceWindow mUIWpfSchedulerSourceWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterValidLogin'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EnterValidLoginParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Fumme' in 'txtUserName' text box
        /// </summary>
        public string UITxtUserNameEditText = "Fumme";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterValidPassword'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EnterValidPasswordParams
    {
        
        #region Fields
        /// <summary>
        /// Type '********' in 'pwPassword' text box
        /// </summary>
        public string UIPwPasswordEditSendKeys = "SfMI6drZbBj+8lDOXCOeg7RGHg/RDmWT";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCheckLoginForm'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertCheckLoginFormExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'tbxLoginResult' text box equals 'Login OK'
        /// </summary>
        public string UITbxLoginResultEditText = "Login OK";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIConnexionWindow : WinWindow
    {
        
        public UIConnexionWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Connexion";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Connexion");
            #endregion
        }
        
        #region Properties
        public WinTitleBar UIConnexionTitleBar
        {
            get
            {
                if ((this.mUIConnexionTitleBar == null))
                {
                    this.mUIConnexionTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIConnexionTitleBar.WindowTitles.Add("Connexion");
                    #endregion
                }
                return this.mUIConnexionTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private WinTitleBar mUIConnexionTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIConnexionWindow1 : WpfWindow
    {
        
        public UIConnexionWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Connexion";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Connexion");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITxtUserNameEdit
        {
            get
            {
                if ((this.mUITxtUserNameEdit == null))
                {
                    this.mUITxtUserNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtUserNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtUserName";
                    this.mUITxtUserNameEdit.WindowTitles.Add("Connexion");
                    #endregion
                }
                return this.mUITxtUserNameEdit;
            }
        }
        
        public WpfEdit UIPwPasswordEdit
        {
            get
            {
                if ((this.mUIPwPasswordEdit == null))
                {
                    this.mUIPwPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPwPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "pwPassword";
                    this.mUIPwPasswordEdit.WindowTitles.Add("Connexion");
                    #endregion
                }
                return this.mUIPwPasswordEdit;
            }
        }
        
        public WpfButton UIConnecterButton
        {
            get
            {
                if ((this.mUIConnecterButton == null))
                {
                    this.mUIConnecterButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIConnecterButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnConnect";
                    this.mUIConnecterButton.WindowTitles.Add("Connexion");
                    #endregion
                }
                return this.mUIConnecterButton;
            }
        }
        
        public WpfEdit UITbxLoginResultEdit
        {
            get
            {
                if ((this.mUITbxLoginResultEdit == null))
                {
                    this.mUITbxLoginResultEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbxLoginResultEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbxLoginResult";
                    this.mUITbxLoginResultEdit.WindowTitles.Add("Connexion");
                    #endregion
                }
                return this.mUITbxLoginResultEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITxtUserNameEdit;
        
        private WpfEdit mUIPwPasswordEdit;
        
        private WpfButton mUIConnecterButton;
        
        private WpfEdit mUITbxLoginResultEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWpfSchedulerSourceWindow : WinWindow
    {
        
        public UIWpfSchedulerSourceWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "WpfScheduler-Source";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("WpfScheduler-Source");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Vue d’éléments";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("WpfScheduler-Source");
            #endregion
        }
        
        #region Properties
        public UIEventUserControlxamlListItem UIEventUserControlxamlListItem
        {
            get
            {
                if ((this.mUIEventUserControlxamlListItem == null))
                {
                    this.mUIEventUserControlxamlListItem = new UIEventUserControlxamlListItem(this);
                }
                return this.mUIEventUserControlxamlListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIEventUserControlxamlListItem mUIEventUserControlxamlListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEventUserControlxamlListItem : WinListItem
    {
        
        public UIEventUserControlxamlListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "EventUserControl.xaml.cs";
            this.WindowTitles.Add("WpfScheduler-Source");
            #endregion
        }
        
        #region Properties
        public WinEdit UINomEdit
        {
            get
            {
                if ((this.mUINomEdit == null))
                {
                    this.mUINomEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINomEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nom";
                    this.mUINomEdit.WindowTitles.Add("WpfScheduler-Source");
                    #endregion
                }
                return this.mUINomEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINomEdit;
        #endregion
    }
}
